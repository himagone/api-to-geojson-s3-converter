{
  "service": {
    "service": "api-to-geojson-s3-converter",
    "serviceObject": {
      "name": "api-to-geojson-s3-converter"
    },
    "provider": {
      "name": "aws",
      "runtime": "nodejs18.x",
      "stage": "dev",
      "region": "ap-northeast-1",
      "environment": {
        "EXTERNAL_API_URL": "https://api.smartcity-yaizu.jp/v2/entities/",
        "FIWARE_SERVICE": "smartcity_yaizu",
        "API_KEY": "c54a2f8e-a32c-d9f6-7a64-693eb50f0e96",
        "S3_BUCKET": "smartcity-yaizu-test",
        "TZ": "Asia/Tokyo"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "s3:PutObject",
            "s3:GetObject",
            "s3:ListBucket"
          ],
          "Resource": [
            "arn:aws:s3:::smartcity-yaizu-test",
            "arn:aws:s3:::smartcity-yaizu-test/*"
          ]
        }
      ],
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "CallExternalApiLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/api-to-geojson-s3-converter-dev-callExternalApi"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "api-to-geojson-s3-converter",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-to-geojson-s3-converter-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/api-to-geojson-s3-converter-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iamRoleStatements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "api-to-geojson-s3-converter",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "CallExternalApiLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/api-to-geojson-s3-converter/dev/1726113870474-2024-09-12T04:04:30.474Z/api-to-geojson-s3-converter.zip"
              },
              "Handler": "src/index.handler",
              "Runtime": "nodejs18.x",
              "FunctionName": "api-to-geojson-s3-converter-dev-callExternalApi",
              "MemorySize": 1024,
              "Timeout": 300,
              "Environment": {
                "Variables": {
                  "EXTERNAL_API_URL": "https://api.smartcity-yaizu.jp/v2/entities/",
                  "FIWARE_SERVICE": "smartcity_yaizu",
                  "API_KEY": "c54a2f8e-a32c-d9f6-7a64-693eb50f0e96",
                  "S3_BUCKET": "smartcity-yaizu-test",
                  "TZ": "Asia/Tokyo"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CallExternalApiLogGroup"
            ]
          },
          "CallExternalApiLambdaVersion4tnXLTGfJ9nWCfL2Y7fjKXEFMhY0ARYumJZPk9COiL8": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CallExternalApiLambdaFunction"
              },
              "CodeSha256": "zDUvA2UTn97r6D1eISaSc0JoXB6ozFaBd7tlzjHr4g4="
            }
          },
          "Apitogeojsons3converterdevcallExternalApirule1EventBridgeRule": {
            "Type": "AWS::Events::Rule",
            "Properties": {
              "Name": "api-to-geojson-s3-converter-dev-callExternalApi-rule-1",
              "ScheduleExpression": "cron(0 3 * * ? *)",
              "State": "ENABLED",
              "Targets": [
                {
                  "Arn": {
                    "Fn::GetAtt": [
                      "CallExternalApiLambdaFunction",
                      "Arn"
                    ]
                  },
                  "Id": "api-to-geojson-s3-converter-dev-callExternalApi-rule-1-target"
                }
              ]
            }
          },
          "CallExternalApiEventBridgeLambdaPermission1": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "Action": "lambda:InvokeFunction",
              "FunctionName": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"Apitogeojsons3converterdevcallExternalApirule1EventBridgeRule\"][\"Properties\"][\"Targets\"][0][\"Arn\"]"
              },
              "Principal": "events.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  ":",
                  [
                    "arn",
                    {
                      "Ref": "AWS::Partition"
                    },
                    "events",
                    {
                      "Ref": "AWS::Region"
                    },
                    {
                      "Ref": "AWS::AccountId"
                    },
                    {
                      "Fn::Join": [
                        "/",
                        [
                          "rule",
                          "api-to-geojson-s3-converter-dev-callExternalApi-rule-1"
                        ]
                      ]
                    }
                  ]
                ]
              }
            }
          },
          "S3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketName": "smartcity-yaizu",
              "AccessControl": "Private",
              "CorsConfiguration": {
                "CorsRules": [
                  {
                    "AllowedOrigins": [
                      "*"
                    ],
                    "AllowedHeaders": [
                      "*"
                    ],
                    "AllowedMethods": [
                      "GET",
                      "HEAD"
                    ],
                    "MaxAge": 3000
                  }
                ]
              }
            }
          },
          "CloudFrontOriginAccessControl": {
            "Type": "AWS::CloudFront::OriginAccessControl",
            "Properties": {
              "OriginAccessControlConfig": {
                "Description": "Default Origin Access Control",
                "Name": "S3OriginAccessControl",
                "OriginAccessControlOriginType": "s3",
                "SigningBehavior": "always",
                "SigningProtocol": "sigv4"
              }
            }
          },
          "CloudFrontDistribution": {
            "Type": "AWS::CloudFront::Distribution",
            "Properties": {
              "DistributionConfig": {
                "Enabled": true,
                "DefaultCacheBehavior": {
                  "ViewerProtocolPolicy": "allow-all",
                  "TargetOriginId": "S3Origin",
                  "ForwardedValues": {
                    "QueryString": false
                  },
                  "MinTTL": 0,
                  "DefaultTTL": 1200,
                  "MaxTTL": 3600,
                  "AllowedMethods": [
                    "GET",
                    "HEAD"
                  ],
                  "Compress": true
                },
                "Origins": [
                  {
                    "Id": "S3Origin",
                    "DomainName": {
                      "Fn::GetAtt": [
                        "S3Bucket",
                        "DomainName"
                      ]
                    },
                    "OriginAccessControlId": {
                      "Ref": "CloudFrontOriginAccessControl"
                    },
                    "S3OriginConfig": {}
                  }
                ]
              }
            }
          },
          "S3BucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "S3Bucket"
              },
              "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "PolicyForCloudFrontPrivateContent",
                    "Effect": "Allow",
                    "Principal": {
                      "Service": "cloudfront.amazonaws.com"
                    },
                    "Action": "s3:GetObject",
                    "Resource": {
                      "Fn::Join": [
                        "",
                        [
                          "arn:aws:s3:::",
                          {
                            "Ref": "S3Bucket"
                          },
                          "/*"
                        ]
                      ]
                    },
                    "Condition": {
                      "StringEquals": {
                        "AWS:SourceArn": {
                          "Fn::Sub": "arn:aws:cloudfront::${AWS::AccountId}:origin-access-control/${CloudFrontOriginAccessControl}"
                        }
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-api-to-geojson-s3-converter-dev-ServerlessDeploymentBucketName"
            }
          },
          "CallExternalApiLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CallExternalApiLambdaVersion4tnXLTGfJ9nWCfL2Y7fjKXEFMhY0ARYumJZPk9COiL8"
            },
            "Export": {
              "Name": "sls-api-to-geojson-s3-converter-dev-CallExternalApiLambdaFunctionQualifiedArn"
            }
          },
          "URL": {
            "Value": {
              "Fn::GetAtt": [
                "CloudFrontDistribution",
                "DomainName"
              ]
            },
            "Description": "CloudFront URL"
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "pluginsData": {},
    "functions": {
      "callExternalApi": {
        "handler": "src/index.handler",
        "events": [
          {
            "eventBridge": {
              "schedule": "cron(0 3 * * ? *)",
              "enabled": true
            }
          }
        ],
        "timeout": 300,
        "name": "api-to-geojson-s3-converter-dev-callExternalApi",
        "package": {},
        "memory": 1024,
        "runtime": "nodejs18.x",
        "vpc": {},
        "versionLogicalId": "CallExternalApiLambdaVersion4tnXLTGfJ9nWCfL2Y7fjKXEFMhY0ARYumJZPk9COiL8"
      }
    },
    "resources": {
      "Resources": {
        "S3Bucket": {
          "Type": "AWS::S3::Bucket",
          "Properties": {
            "BucketName": "smartcity-yaizu",
            "AccessControl": "Private",
            "CorsConfiguration": {
              "CorsRules": [
                {
                  "AllowedOrigins": [
                    "*"
                  ],
                  "AllowedHeaders": [
                    "*"
                  ],
                  "AllowedMethods": [
                    "GET",
                    "HEAD"
                  ],
                  "MaxAge": 3000
                }
              ]
            }
          }
        },
        "CloudFrontOriginAccessControl": {
          "Type": "AWS::CloudFront::OriginAccessControl",
          "Properties": {
            "OriginAccessControlConfig": {
              "Description": "Default Origin Access Control",
              "Name": "S3OriginAccessControl",
              "OriginAccessControlOriginType": "s3",
              "SigningBehavior": "always",
              "SigningProtocol": "sigv4"
            }
          }
        },
        "CloudFrontDistribution": {
          "Type": "AWS::CloudFront::Distribution",
          "Properties": {
            "DistributionConfig": {
              "Enabled": true,
              "DefaultCacheBehavior": {
                "ViewerProtocolPolicy": "allow-all",
                "TargetOriginId": "S3Origin",
                "ForwardedValues": {
                  "QueryString": false
                },
                "MinTTL": 0,
                "DefaultTTL": 1200,
                "MaxTTL": 3600,
                "AllowedMethods": [
                  "GET",
                  "HEAD"
                ],
                "Compress": true
              },
              "Origins": [
                {
                  "Id": "S3Origin",
                  "DomainName": {
                    "Fn::GetAtt": [
                      "S3Bucket",
                      "DomainName"
                    ]
                  },
                  "OriginAccessControlId": {
                    "Ref": "CloudFrontOriginAccessControl"
                  },
                  "S3OriginConfig": {}
                }
              ]
            }
          }
        },
        "S3BucketPolicy": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "Bucket": {
              "Ref": "S3Bucket"
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Sid": "PolicyForCloudFrontPrivateContent",
                  "Effect": "Allow",
                  "Principal": {
                    "Service": "cloudfront.amazonaws.com"
                  },
                  "Action": "s3:GetObject",
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        "arn:aws:s3:::",
                        {
                          "Ref": "S3Bucket"
                        },
                        "/*"
                      ]
                    ]
                  },
                  "Condition": {
                    "StringEquals": {
                      "AWS:SourceArn": {
                        "Fn::Sub": "arn:aws:cloudfront::${AWS::AccountId}:origin-access-control/${CloudFrontOriginAccessControl}"
                      }
                    }
                  }
                }
              ]
            }
          }
        }
      },
      "Outputs": {
        "URL": {
          "Value": {
            "Fn::GetAtt": [
              "CloudFrontDistribution",
              "DomainName"
            ]
          },
          "Description": "CloudFront URL"
        }
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "api-to-geojson-s3-converter",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "/Users/user/Documents/git/api-to-geojson-s3-converter/.serverless/api-to-geojson-s3-converter.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/api-to-geojson-s3-converter/dev/1726113870474-2024-09-12T04:04:30.474Z",
    "artifact": "api-to-geojson-s3-converter.zip"
  }
}